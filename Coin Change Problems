class Solution{

	public:
	int solve(int coins[],int M,int V,vector<int> &dp){
	    if(V==0){
	        return 0;
	    }
	    if(V<0){
	        return INT_MAX;
	    }
	    int mini = INT_MAX;
	    if(dp[V]!=INT_MAX){
	        return dp[V];
	    }
	    for(int i=0;i<M;i++){
	        int ans = solve(coins,M,V-coins[i],dp);
	        if(ans!=INT_MAX){
	            mini = min(mini,ans+1);
	        }
	    }
	    dp[V]=mini;
	    return mini;
	}
	int minCoins(int coins[], int M, int V) 
	{ 
	    // Your code goes here
	    vector<int> dp(M+1,-1);
	    int ans=solve(coins,M,V,dp);
	    if(ans!=INT_MAX){
	        return ans;
	    }
	    return -1;
	} 
	  
};

// { Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int v, m;
        cin >> v >> m;

        int coins[m];
        for(int i = 0; i < m; i++)
        	cin >> coins[i];

      
	    Solution ob;
	    cout << ob.minCoins(coins, m, v) << "\n";
	     
    }
    return 0;
}
  // } Driver Code Ends
