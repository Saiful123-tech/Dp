Top down approach (Recursion + Memiozation)
TC o(n) SC o(n)
#include<bits/stdc++.h>
class Solution {
public:
    int helper(int n,vector<int> &dp){
        if(n<=1){
            return n;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        dp[n]=helper(n-1,dp)+helper(n-2,dp);
        return dp[n];
    }
    int fib(int n) {
        vector<int> dp;
        for(int i=0;i<=n;i++){
            dp.push_back(-1);
        }
    return helper(n,dp);
    }
};


Bottom up Approcah (Tabulation Method)
TC o(n)
SC o(n)
 int fib(int n) {
      vector<int> dp;
        dp.push_back(0);
        dp.push_back(1);
        for(int i=2;i<=n;i++){
            dp.push_back(dp[i-1]+dp[i-2]);
        }
        return dp[n];
    }
    
Best Approach 
TC o(n) SC o(1)
  int fib(int n) {
       int prev1=1;
       int prev2=0;
       int current;
       if(n==0){
           return prev2;
       }
       for(int i=2;i<=n;i++){
           current=prev1+prev2;
           prev2=prev1;
           prev1=current;
       }
       return prev1;
    }
