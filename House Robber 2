class Solution {
public:
int helper(vector<int> &nums){
    // Write your code here.
   int prev1=nums[0];
    int prev2=0;
    int current;
    for(int i=1;i<nums.size();i++){
         int pick=nums[i];
        if(i>1){
           pick=pick+prev2;
       }
      int npick=0+prev1;
        prev2=prev1;
        prev1 = max(pick,npick);
        
    }
    return prev1;
}
    int rob(vector<int>& nums) {
    vector<int> temp1,temp2;
    int n=nums.size();
    if(n==1){
        return nums[0];
    }
    for(int i=0;i<nums.size();i++){
        if(i!=0){
           temp1.push_back(nums[i]); 
        }
        if(i!=n-1){
            temp2.push_back(nums[i]);
        }
    }
    int ans1=helper(temp1);
    int ans2=helper(temp2);
    return max(ans1,ans2);
    }
};
